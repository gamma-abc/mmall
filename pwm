#include<reg52.h>

#define uint unsigned int
 
#define uchar unsigned char

sbit en=P2^2;		//1602  6管脚
sbit rs=P2^0;	 //1602端口	4管脚
sbit rw=P2^1;//lcd1602控制端口 5管脚 
 
uchar time;
 
double count=98; //定义占空比，并初始占空比为26%

sbit outA=P1^5;	//电机输出pwm
sbit outB=P1^6;	//电机输出pwm
sbit enA=P1^7;

sbit key_add=P1^0; //电机加速的按键 的I/O口 
sbit key_dec=P1^1; //电机减速的按键 的I/O口
sbit key_zheng=P1^2; //电机正传的按键 的I/O口
sbit key_fan=P1^3; //电机反转的按键 的I/O口
sbit key_start=P1^4; //电机启停的按键 的I/O口

uint zhuansu,flag,z1,z2,m,flag_1,zheng,fan,kai; 
 
/************函数声明**************/
 
void delay(uint z); //延时
 
void Motor_add(); //电机加速，即增加占空比
 
void Motor_dec(); //电机减速，即减少占空比
void Motor_zheng();
void Motor_fan();
void Motor_start(); 

void display();
void write_com(uchar com);
void write_data(uchar date);

void init();
 
/*********主函数********************/
 
void main() 
{	
	zhuansu=0;					   //转速初值0
	flag=0;
	zheng=1;				  //初始化电机正转动
	fan=0;
    init();              //初始化
	delay(15);	 //延时	 
	while(1)	 
	{	 
		Motor_add();	//电机加速，即增加占空比
		 
		Motor_dec();

		Motor_zheng();

		Motor_fan();

		Motor_start();
		
		
				
	}
}

/*********初始化函数********************/

void init()//初始化函数
{ 
  en=0;
  rw=0;
  write_com(0x01);         //lcd初始化
  write_com(0x38);					   //5X7显示
  write_com(0x0c);			 //关闭光标
  TMOD=0x11;               //定时器方式1           
	EA=1;                    //开总中断
  // 定时/计数器T0
  TH0=(65536-500)/256;	 	  //10us
  TL0=(65536-500)%256; 
  ET0=1;                   //定时器0开中断
  TR0=1; 					 //启动定时器0
  // 外部中断1
  EX1=1;				  //外部中断1请求允许位
  IT1=1;                 //外部中断1触发方式控制位 0 低电平触发   1 负边沿触发
  // 定时/计数器T1
  TH1=(65536-5000)/256;	 	  //5ms
	TL1=(65536-5000)%256; 
  ET1=1;                   //定时器1开中断 定时/计数1中断允许位；
  TR1=1;  
  
  write_com(0x80);
  write_data('V');
  write_data(':');
  write_com(0x87);		 //第一行显示转速
  write_data(' ');
  write_data('r');
  write_data('p');
  write_data('m');
  write_com(0xc0); 
}
 
void int1()interrupt 2	//外部中断1脉冲技术记录电机的转速 电机转一圈zhuansu加一
{
  zhuansu++;

}
void int2()interrupt 3				  //定时器1显示转速	  3 为定时器1的中断号
{
  TH1=(65536-5000)/256;	 	  //5ms
  TL1=(65536-5000)%256; 
  flag++; 
  if(flag==600)				   //计时到达3s
	    {
			display();						//显示转速
			zhuansu=0;					  //转速置0
			flag=0;
		}
  
}
/**************定时0中断处理******************/
//   1 定时器0的中断号 0 外部中断1  2 外部中断2 4 串口中断
void timer0_int() interrupt 1 
{ 
	TH0=(65536-500)/256; 
	TL0=(65536-500)%256; 
	time++; 
	if(time>100){
		time=1;
	}
	if(kai==1)	
		{
		if(zheng==1)
		{
			 if(time<count) //count为占空比 
			{ 	
				  	outA=1; //输出高电平 
					outB=0; //输出高电平			
			}else
			{
				//enA=0;
				outA=0;
				outB=0;
			}
		}
		if(fan==1)

		{
		   if(time<count) //count为占空比 
			{ 	
				  	outA=0; //输出高电平 
					outB=1; //输出高电平			
			}else
			{
			//	enA=0;
				outA=0;
				outB=0;
			}
		}
	}	
	if(kai==0)	   //kai=0电机停止转动
	{
		outA=0;
		outB=0;	
	}
}

void display()
{
  write_com(0x82);
  zhuansu=zhuansu*20;	  //将两秒内的计数乘以30得到转每分

  if(zhuansu/10000!=0)
   write_data(zhuansu/10000+0x30);	//如果转速的万位不为0	正常显示否则显示空格
   else
   write_data(' ');

  if(zhuansu/1000==0)
  write_data(' ');
  else 
  write_data(zhuansu%10000/1000+0x30);	//如果转速小于1000 千位为空格 否则正常显示
  
  if(zhuansu/100==0)
  write_data(' ');
  else
  write_data(zhuansu%10000%1000/100+0x30);//如果转速小于100 百位为空格 否则正常显示

    if(zhuansu/10==0)
  write_data(' ');
  else
  write_data(zhuansu%10000%1000%100/10+0x30);//如果转速小于10 十位为空格 否则正常显示

  write_data(zhuansu%10000%1000%100%10+0x30);
  write_com(0xd0); //如果没有这句 当中断内的显示函数执行完，
  				   //就会在转速的位置显示占空比数据，导致乱码
}

/****************延时处理**********************/

void delay(uint z) //延时xms程序
{
	uint x,y;	 
	for(y=z;x>0;x--) 
	for(y=110;y>0;y--);
}
/*********向1602写一字节（控制指令）********************/

void write_com(uchar com)
{
  rs=0;
  P0=com;
  delay(5);
  en=0;
  delay(10);
  en=1;
}

/*********向1602写一字节（数据）********************/

void write_data(uchar date)
{
  rs=1;
  P0=date;
  delay(5);
  en=0;
  delay(5);
  en=1;
}

/****************电机加速**********************/ 

void Motor_add()  
{
	if(key_add==0)
	{
		delay(2); //此处时间不能太长，否者会的中断产生冲突		 
		if(key_add==0)		 
		{		 
			count=count+4; //每按一次加速按键占空比加0.5			 
			if(count>=99) //限定占空比上限			 
			{			 
				count=99;			 
			}		 
		}	 
	while(!key_add);//一直被按下时等待在这里	 
	}	 
} 

/****************电机减速**********************/ 

void Motor_dec() 
{ 
	if(key_dec==0)	 
	{	 
		delay(2);//此处时间不能太长，否者会的中断产生冲突	 
		if(key_dec==0) 
		{		 
			count=count-4; //每按一次减速按键占空比减1		 
			if(count<=7) //限定占空比下限		 
			{		 
			count=7;		 
			}	 
		} 
		delay(1);
		while(!key_dec);
		delay(1);
		while(!key_dec);	 
	}
}  

/****************电机正转**********************/ 

void Motor_zheng() 
{ 
	if(key_zheng==0)	 
	{	 
		delay(1);
		if(key_zheng==0)
		 {
			 delay(1);
			 if(key_zheng==0)
			 {
				 	zheng=1;		 //正传标志置0
	  				fan=0;	  		// 反转标志置1
			 }
		 }
		while(!key_zheng);	 
	}
}

/****************电机反转**********************/ 

void Motor_fan() 
{ 
	if(key_fan==0)	 
	{	 
		delay(1);
		if(key_fan==0)
		 {
			 delay(1);
			 if(key_fan==0)
			 {
				 	zheng=0;		//正传标志置1
	  				fan=1;	  		// 反转标志置0
			 }
		 }
		while(!key_start);	 
	}
}

/****************电机停止**********************/ 

void Motor_start() 
{ 		    uint i;
		if(key_start==0)
		 {
			 delay(2);
			 if(key_start==0)
			 {
			 	 for(i=0;i<100;i++)     //此处消抖程序非常经典，怎么按都绝对不会产生抖动。
                        {
                        if(key_start==0)
                           i=0;
                        }	 
				  kai=1-kai;
			 }
		 }
		 delay(2);
		while(!key_start);
		delay(2);
		while(!key_start);	 
} 
